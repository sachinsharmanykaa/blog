{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"calculations/","text":"This part of the project documentation focuses on an information-oriented approach. Use it as a reference for the technical implementation of the calculator project code. Provides several sample math calculations. This module allows the user to make mathematical calculations. Examples: >>> from calculator import calculations >>> calculations . add ( 2 , 4 ) 6.0 >>> calculations . multiply ( 2.0 , 4.0 ) 8.0 >>> from calculator.calculations import divide >>> divide ( 4.0 , 2 ) 2.0 The module contains the following functions: add(a, b) - Returns the sum of two numbers. subtract(a, b) - Returns the difference of two numbers. multiply(a, b) - Returns the product of two numbers. divide(a, b) - Returns the quotient of two numbers. add ( a , b ) Compute and return the sum of two numbers. Examples: >>> add ( 4.0 , 2.0 ) 6.0 >>> add ( 4 , 2 ) 6.0 Parameters: Name Type Description Default a Union [ float , int ] A number representing the first addend in the addition. required b Union [ float , int ] A number representing the second addend in the addition. required Returns: Type Description float A number representing the arithmetic sum of a and b . Source code in src/calculations.py 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 def add ( a : Union [ float , int ], b : Union [ float , int ]) -> float : \"\"\"Compute and return the sum of two numbers. Examples: >>> add(4.0, 2.0) 6.0 >>> add(4, 2) 6.0 Args: a: A number representing the first addend in the addition. b: A number representing the second addend in the addition. Returns: A number representing the arithmetic sum of `a` and `b`. \"\"\" return float ( a + b ) divide ( a , b ) Compute and return the quotient of two numbers. Examples: >>> divide ( 4.0 , 2.0 ) 2.0 >>> divide ( 4 , 2 ) 2.0 >>> divide ( 4 , 0 ) Traceback (most recent call last): ... ZeroDivisionError : division by zero Parameters: Name Type Description Default a Union [ float , int ] A number representing the dividend in the division. required b Union [ float , int ] A number representing the divisor in the division. required Returns: Type Description float A number representing the quotient of a and b . Raises: Type Description ZeroDivisionError An error occurs when the divisor is 0 . Source code in src/calculations.py 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 def divide ( a : Union [ float , int ], b : Union [ float , int ]) -> float : \"\"\"Compute and return the quotient of two numbers. Examples: >>> divide(4.0, 2.0) 2.0 >>> divide(4, 2) 2.0 >>> divide(4, 0) Traceback (most recent call last): ... ZeroDivisionError: division by zero Args: a: A number representing the dividend in the division. b: A number representing the divisor in the division. Returns: A number representing the quotient of `a` and `b`. Raises: ZeroDivisionError: An error occurs when the divisor is `0`. \"\"\" if b == 0 : raise ZeroDivisionError ( \"division by zero\" ) return float ( a / b ) multiply ( a , b ) Compute and return the product of two numbers. Examples: >>> multiply ( 4.0 , 2.0 ) 8.0 >>> multiply ( 4 , 2 ) 8.0 Parameters: Name Type Description Default a Union [ float , int ] A number representing the multiplicand in the multiplication. required b Union [ float , int ] A number representing the multiplier in the multiplication. required Returns: Type Description float A number representing the product of a and b . Source code in src/calculations.py 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 def multiply ( a : Union [ float , int ], b : Union [ float , int ]) -> float : \"\"\"Compute and return the product of two numbers. Examples: >>> multiply(4.0, 2.0) 8.0 >>> multiply(4, 2) 8.0 Args: a: A number representing the multiplicand in the multiplication. b: A number representing the multiplier in the multiplication. Returns: A number representing the product of `a` and `b`. \"\"\" return float ( a * b ) subtract ( a , b ) Calculate the difference of two numbers. Examples: >>> subtract ( 4.0 , 2.0 ) 2.0 >>> subtract ( 4 , 2 ) 2.0 Parameters: Name Type Description Default a Union [ float , int ] A number representing the minuend in the subtraction. required b Union [ float , int ] A number representing the subtrahend in the subtraction. required Returns: Type Description float A number representing the difference between a and b . Source code in src/calculations.py 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 def subtract ( a : Union [ float , int ], b : Union [ float , int ]) -> float : \"\"\"Calculate the difference of two numbers. Examples: >>> subtract(4.0, 2.0) 2.0 >>> subtract(4, 2) 2.0 Args: a: A number representing the minuend in the subtraction. b: A number representing the subtrahend in the subtraction. Returns: A number representing the difference between `a` and `b`. \"\"\" return float ( a - b )","title":"Calculations"},{"location":"calculations/#src.calculations.add","text":"Compute and return the sum of two numbers. Examples: >>> add ( 4.0 , 2.0 ) 6.0 >>> add ( 4 , 2 ) 6.0 Parameters: Name Type Description Default a Union [ float , int ] A number representing the first addend in the addition. required b Union [ float , int ] A number representing the second addend in the addition. required Returns: Type Description float A number representing the arithmetic sum of a and b . Source code in src/calculations.py 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 def add ( a : Union [ float , int ], b : Union [ float , int ]) -> float : \"\"\"Compute and return the sum of two numbers. Examples: >>> add(4.0, 2.0) 6.0 >>> add(4, 2) 6.0 Args: a: A number representing the first addend in the addition. b: A number representing the second addend in the addition. Returns: A number representing the arithmetic sum of `a` and `b`. \"\"\" return float ( a + b )","title":"add()"},{"location":"calculations/#src.calculations.divide","text":"Compute and return the quotient of two numbers. Examples: >>> divide ( 4.0 , 2.0 ) 2.0 >>> divide ( 4 , 2 ) 2.0 >>> divide ( 4 , 0 ) Traceback (most recent call last): ... ZeroDivisionError : division by zero Parameters: Name Type Description Default a Union [ float , int ] A number representing the dividend in the division. required b Union [ float , int ] A number representing the divisor in the division. required Returns: Type Description float A number representing the quotient of a and b . Raises: Type Description ZeroDivisionError An error occurs when the divisor is 0 . Source code in src/calculations.py 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 def divide ( a : Union [ float , int ], b : Union [ float , int ]) -> float : \"\"\"Compute and return the quotient of two numbers. Examples: >>> divide(4.0, 2.0) 2.0 >>> divide(4, 2) 2.0 >>> divide(4, 0) Traceback (most recent call last): ... ZeroDivisionError: division by zero Args: a: A number representing the dividend in the division. b: A number representing the divisor in the division. Returns: A number representing the quotient of `a` and `b`. Raises: ZeroDivisionError: An error occurs when the divisor is `0`. \"\"\" if b == 0 : raise ZeroDivisionError ( \"division by zero\" ) return float ( a / b )","title":"divide()"},{"location":"calculations/#src.calculations.multiply","text":"Compute and return the product of two numbers. Examples: >>> multiply ( 4.0 , 2.0 ) 8.0 >>> multiply ( 4 , 2 ) 8.0 Parameters: Name Type Description Default a Union [ float , int ] A number representing the multiplicand in the multiplication. required b Union [ float , int ] A number representing the multiplier in the multiplication. required Returns: Type Description float A number representing the product of a and b . Source code in src/calculations.py 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 def multiply ( a : Union [ float , int ], b : Union [ float , int ]) -> float : \"\"\"Compute and return the product of two numbers. Examples: >>> multiply(4.0, 2.0) 8.0 >>> multiply(4, 2) 8.0 Args: a: A number representing the multiplicand in the multiplication. b: A number representing the multiplier in the multiplication. Returns: A number representing the product of `a` and `b`. \"\"\" return float ( a * b )","title":"multiply()"},{"location":"calculations/#src.calculations.subtract","text":"Calculate the difference of two numbers. Examples: >>> subtract ( 4.0 , 2.0 ) 2.0 >>> subtract ( 4 , 2 ) 2.0 Parameters: Name Type Description Default a Union [ float , int ] A number representing the minuend in the subtraction. required b Union [ float , int ] A number representing the subtrahend in the subtraction. required Returns: Type Description float A number representing the difference between a and b . Source code in src/calculations.py 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 def subtract ( a : Union [ float , int ], b : Union [ float , int ]) -> float : \"\"\"Calculate the difference of two numbers. Examples: >>> subtract(4.0, 2.0) 2.0 >>> subtract(4, 2) 2.0 Args: a: A number representing the minuend in the subtraction. b: A number representing the subtrahend in the subtraction. Returns: A number representing the difference between `a` and `b`. \"\"\" return float ( a - b )","title":"subtract()"}]}